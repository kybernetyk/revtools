Handy command line tools for x86 reverse engineering.

asm - command line assembler
    input: x86 assembly
    output: opcodes
    ex: ./asm nop
        ./asm xor eax, eax
        ./asm mov eax, 1
    depends on NASM

dasm - command line disassembler
    input: opcode stream
    output: x86 assembly
    ex: ./dasm 909090ebfe
        ./dasm "\x90\x90\x90\xeb\xfe"
        ./dasm 90 90 90 eb fe
    depends on pydasm

hc - hex <-> dec converter
    input: dec or hex number
    output: hex or dec number
    ex: ./hc 0x90
        ./hc 1234
        ./hc f00dfefeh
        ./hc -2
    change SIGNED to False if you want unsigned conversions

chr - hexvalue -> byte
    input: hex value
        output: byte value
        ex: ./chr 48 49 4a 4b
                -> HIJK
            ./chr 48494a4b
                -> HIJK
ord - byte -> hexvalue
    input: byte value
        output: hex value
        ex: ./ord $(perl -e 'print "\x90xyz"')
                -> 90 78 79 7A
        ./ord lol
                -> 6C 6F 6C
        ./ord a b c  
                -> 61 62 63 #note that whitespace is not converted to 0x20!
        ./ord "a b c"
                -> 61 20 62 20 63 #note that whitespace is converted to 0x20 now

ord chr chaining with xargs:
    ./ord lol |xargs ./chr
            -> lol

(C) Leon Szpilewski 2011, http://github.com/jsz
Licensed under GPL3
    
